/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SignupImport } from "./routes/signup";
import { Route as LoginImport } from "./routes/login";
import { Route as AuthImport } from "./routes/_auth";
import { Route as ProtectedIndexImport } from "./routes/_protected/index";
import { Route as ProtectedAboutImport } from "./routes/_protected/about";

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: "/_protected/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProtectedAboutRoute = ProtectedAboutImport.update({
  id: "/_protected/about",
  path: "/about",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
    "/_protected/about": {
      id: "/_protected/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof ProtectedAboutImport;
      parentRoute: typeof rootRoute;
    };
    "/_protected/": {
      id: "/_protected/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof ProtectedIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "": typeof AuthRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/about": typeof ProtectedAboutRoute;
  "/": typeof ProtectedIndexRoute;
}

export interface FileRoutesByTo {
  "": typeof AuthRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/about": typeof ProtectedAboutRoute;
  "/": typeof ProtectedIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_auth": typeof AuthRoute;
  "/login": typeof LoginRoute;
  "/signup": typeof SignupRoute;
  "/_protected/about": typeof ProtectedAboutRoute;
  "/_protected/": typeof ProtectedIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "" | "/login" | "/signup" | "/about" | "/";
  fileRoutesByTo: FileRoutesByTo;
  to: "" | "/login" | "/signup" | "/about" | "/";
  id: "__root__" | "/_auth" | "/login" | "/signup" | "/_protected/about" | "/_protected/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRoute;
  LoginRoute: typeof LoginRoute;
  SignupRoute: typeof SignupRoute;
  ProtectedAboutRoute: typeof ProtectedAboutRoute;
  ProtectedIndexRoute: typeof ProtectedIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ProtectedAboutRoute: ProtectedAboutRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login",
        "/signup",
        "/_protected/about",
        "/_protected/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_protected/about": {
      "filePath": "_protected/about.tsx"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
